Terminals unused in grammar

   CAR_COMILLAS
   PUNTO
   COMENTARIO_SIMPLE
   COMILLA_ABRE
   COMILLA_CIERRA
   LISTA_CONTAR


Gramática

    0 $accept: PROGRAMA $end

    1 $@1: /* vacío */

    2 PROGRAMA: $@1 algoritmo

    3 $@2: /* vacío */

    4 algoritmo: $@2 bloque

    5 bloque: bloque sentencia
    6       | sentencia

    7 sentencia: ciclo
    8          | est_declaracion
    9          | est_asignacion PUNTO_Y_COMA
   10          | seleccion
   11          | entrada_salida PUNTO_Y_COMA

   12 est_asignacion: CONST ID OP_ASIG_CONS CONST_REAL
   13               | CONST ID OP_ASIG_CONS CONST_INT
   14               | CONST ID OP_ASIG_CONS CONST_STR
   15               | asignacion

   16 @3: /* vacío */

   17 $@4: /* vacío */

   18 asignacion: ID @3 OP_ASIG $@4 expresion

   19 $@5: /* vacío */

   20 ciclo: WHILE $@5 PARENTESIS condicion END_PARENTESIS LLAVE bloque END_LLAVE

   21 condicion: comparacion
   22          | comparacion OP_AND comparacion

   23 comparacion: expresion lista_comparadores expresion
   24            | expresion

   25 $@6: /* vacío */

   26 expresion: expresion OP_SUM $@6 termino

   27 $@7: /* vacío */

   28 expresion: expresion OP_RES $@7 termino
   29          | termino

   30 $@8: /* vacío */

   31 termino: termino OP_MUL $@8 factor

   32 $@9: /* vacío */

   33 termino: termino OP_DIV $@9 factor
   34        | factor
   35        | termino COMA factor

   36 factor: ID
   37       | CONST_INT
   38       | CONST_REAL
   39       | CONST_STR
   40       | PARENTESIS expresion END_PARENTESIS
   41       | CONTAR PARENTESIS expresion PUNTO_Y_COMA CORCHETE expresion END_CORCHETE END_PARENTESIS

   42 lista_comparadores: OP_LEQ
   43                   | OP_MOQ
   44                   | OP_EQQ
   45                   | OP_DIFF
   46                   | OP_LESS
   47                   | OP_MORE

   48 $@10: /* vacío */

   49 est_declaracion: DIM $@10 est_variables AS est_tipos

   50 est_variables: OP_LESS lista_variables OP_MORE

   51 lista_variables: ID

   52 @11: /* vacío */

   53 $@12: /* vacío */

   54 lista_variables: ID @11 COMA $@12 lista_variables

   55 lista_tipos: tipo
   56            | tipo COMA lista_tipos

   57 tipo: INTEGER
   58     | FLOAT
   59     | CONST_STR

   60 est_tipos: OP_LESS lista_tipos OP_MORE

   61 seleccion: IF PARENTESIS condicion END_PARENTESIS LLAVE bloque END_LLAVE

   62 $@13: /* vacío */

   63 seleccion: IF PARENTESIS condicion END_PARENTESIS LLAVE bloque END_LLAVE ELSE $@13 END_LLAVE bloque END_LLAVE
   64          | IF PARENTESIS condicion END_PARENTESIS sentencia

   65 $@14: /* vacío */

   66 entrada_salida: GET $@14 ID

   67 $@15: /* vacío */

   68 entrada_salida: PUT $@15 ID

   69 $@16: /* vacío */

   70 entrada_salida: PUT $@16 CONST_STR


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
DIM (258) 49
OP_LESS (259) 46 50 60
OP_MORE (260) 47 50 60
OP_DIFF (261) 45
OP_SUM (262) 26
OP_MUL (263) 31
OP_RES (264) 28
OP_DIV (265) 33
OP_AND (266) 22
OP_EQQ (267) 44
OP_MOQ (268) 43
OP_ASIG (269) 18
OP_ASIG_CONS (270) 12 13 14
ID (271) 12 13 14 18 36 51 54 66 68
CONST (272) 12 13 14
CONST_REAL (273) 12 38
COMA (274) 35 54 56
CONST_INT (275) 13 37
AS (276) 49
FLOAT (277) 58
INTEGER (278) 57
PUT (279) 68 70
CAR_COMILLAS (280)
CONST_STR (281) 14 39 59 70
PUNTO_Y_COMA (282) 9 11 41
PUNTO (283)
GET (284) 66
WHILE (285) 20
PARENTESIS (286) 20 40 41 61 63 64
END_PARENTESIS (287) 20 40 41 61 63 64
OP_LEQ (288) 42
LLAVE (289) 20 61 63
END_LLAVE (290) 20 61 63
COMENTARIO_SIMPLE (291)
IF (292) 61 63 64
ELSE (293) 63
CORCHETE (294) 41
END_CORCHETE (295) 41
CONTAR (296) 41
COMILLA_ABRE (297)
COMILLA_CIERRA (298)
LISTA_CONTAR (299)


No terminales con las reglas donde aparecen

$accept (45)
    en la izquierda: 0
PROGRAMA (46)
    en la izquierda: 2, en la derecha: 0
$@1 (47)
    en la izquierda: 1, en la derecha: 2
algoritmo (48)
    en la izquierda: 4, en la derecha: 2
$@2 (49)
    en la izquierda: 3, en la derecha: 4
bloque (50)
    en la izquierda: 5 6, en la derecha: 4 5 20 61 63
sentencia (51)
    en la izquierda: 7 8 9 10 11, en la derecha: 5 6 64
est_asignacion (52)
    en la izquierda: 12 13 14 15, en la derecha: 9
asignacion (53)
    en la izquierda: 18, en la derecha: 15
@3 (54)
    en la izquierda: 16, en la derecha: 18
$@4 (55)
    en la izquierda: 17, en la derecha: 18
ciclo (56)
    en la izquierda: 20, en la derecha: 7
$@5 (57)
    en la izquierda: 19, en la derecha: 20
condicion (58)
    en la izquierda: 21 22, en la derecha: 20 61 63 64
comparacion (59)
    en la izquierda: 23 24, en la derecha: 21 22
expresion (60)
    en la izquierda: 26 28 29, en la derecha: 18 23 24 26 28 40 41
$@6 (61)
    en la izquierda: 25, en la derecha: 26
$@7 (62)
    en la izquierda: 27, en la derecha: 28
termino (63)
    en la izquierda: 31 33 34 35, en la derecha: 26 28 29 31 33 35
$@8 (64)
    en la izquierda: 30, en la derecha: 31
$@9 (65)
    en la izquierda: 32, en la derecha: 33
factor (66)
    en la izquierda: 36 37 38 39 40 41, en la derecha: 31 33 34 35
lista_comparadores (67)
    en la izquierda: 42 43 44 45 46 47, en la derecha: 23
est_declaracion (68)
    en la izquierda: 49, en la derecha: 8
$@10 (69)
    en la izquierda: 48, en la derecha: 49
est_variables (70)
    en la izquierda: 50, en la derecha: 49
lista_variables (71)
    en la izquierda: 51 54, en la derecha: 50 54
@11 (72)
    en la izquierda: 52, en la derecha: 54
$@12 (73)
    en la izquierda: 53, en la derecha: 54
lista_tipos (74)
    en la izquierda: 55 56, en la derecha: 56 60
tipo (75)
    en la izquierda: 57 58 59, en la derecha: 55 56
est_tipos (76)
    en la izquierda: 60, en la derecha: 49
seleccion (77)
    en la izquierda: 61 63 64, en la derecha: 10
$@13 (78)
    en la izquierda: 62, en la derecha: 63
entrada_salida (79)
    en la izquierda: 66 68 70, en la derecha: 11
$@14 (80)
    en la izquierda: 65, en la derecha: 66
$@15 (81)
    en la izquierda: 67, en la derecha: 68
$@16 (82)
    en la izquierda: 69, en la derecha: 70


estado 0

    0 $accept: . PROGRAMA $end

    $default  reduce usando la regla 1 ($@1)

    PROGRAMA  ir al estado 1
    $@1       ir al estado 2


estado 1

    0 $accept: PROGRAMA . $end

    $end  desplazar e ir al estado 3


estado 2

    2 PROGRAMA: $@1 . algoritmo

    $default  reduce usando la regla 3 ($@2)

    algoritmo  ir al estado 4
    $@2        ir al estado 5


estado 3

    0 $accept: PROGRAMA $end .

    $default  aceptar


estado 4

    2 PROGRAMA: $@1 algoritmo .

    $default  reduce usando la regla 2 (PROGRAMA)


estado 5

    4 algoritmo: $@2 . bloque

    DIM    desplazar e ir al estado 6
    ID     desplazar e ir al estado 7
    CONST  desplazar e ir al estado 8
    PUT    desplazar e ir al estado 9
    GET    desplazar e ir al estado 10
    WHILE  desplazar e ir al estado 11
    IF     desplazar e ir al estado 12

    bloque           ir al estado 13
    sentencia        ir al estado 14
    est_asignacion   ir al estado 15
    asignacion       ir al estado 16
    ciclo            ir al estado 17
    est_declaracion  ir al estado 18
    seleccion        ir al estado 19
    entrada_salida   ir al estado 20


estado 6

   49 est_declaracion: DIM . $@10 est_variables AS est_tipos

    $default  reduce usando la regla 48 ($@10)

    $@10  ir al estado 21


estado 7

   18 asignacion: ID . @3 OP_ASIG $@4 expresion

    $default  reduce usando la regla 16 (@3)

    @3  ir al estado 22


estado 8

   12 est_asignacion: CONST . ID OP_ASIG_CONS CONST_REAL
   13               | CONST . ID OP_ASIG_CONS CONST_INT
   14               | CONST . ID OP_ASIG_CONS CONST_STR

    ID  desplazar e ir al estado 23


estado 9

   68 entrada_salida: PUT . $@15 ID
   70               | PUT . $@16 CONST_STR

    CONST_STR  reduce usando la regla 69 ($@16)
    $default   reduce usando la regla 67 ($@15)

    $@15  ir al estado 24
    $@16  ir al estado 25


estado 10

   66 entrada_salida: GET . $@14 ID

    $default  reduce usando la regla 65 ($@14)

    $@14  ir al estado 26


estado 11

   20 ciclo: WHILE . $@5 PARENTESIS condicion END_PARENTESIS LLAVE bloque END_LLAVE

    $default  reduce usando la regla 19 ($@5)

    $@5  ir al estado 27


estado 12

   61 seleccion: IF . PARENTESIS condicion END_PARENTESIS LLAVE bloque END_LLAVE
   63          | IF . PARENTESIS condicion END_PARENTESIS LLAVE bloque END_LLAVE ELSE $@13 END_LLAVE bloque END_LLAVE
   64          | IF . PARENTESIS condicion END_PARENTESIS sentencia

    PARENTESIS  desplazar e ir al estado 28


estado 13

    4 algoritmo: $@2 bloque .
    5 bloque: bloque . sentencia

    DIM    desplazar e ir al estado 6
    ID     desplazar e ir al estado 7
    CONST  desplazar e ir al estado 8
    PUT    desplazar e ir al estado 9
    GET    desplazar e ir al estado 10
    WHILE  desplazar e ir al estado 11
    IF     desplazar e ir al estado 12

    $default  reduce usando la regla 4 (algoritmo)

    sentencia        ir al estado 29
    est_asignacion   ir al estado 15
    asignacion       ir al estado 16
    ciclo            ir al estado 17
    est_declaracion  ir al estado 18
    seleccion        ir al estado 19
    entrada_salida   ir al estado 20


estado 14

    6 bloque: sentencia .

    $default  reduce usando la regla 6 (bloque)


estado 15

    9 sentencia: est_asignacion . PUNTO_Y_COMA

    PUNTO_Y_COMA  desplazar e ir al estado 30


estado 16

   15 est_asignacion: asignacion .

    $default  reduce usando la regla 15 (est_asignacion)


estado 17

    7 sentencia: ciclo .

    $default  reduce usando la regla 7 (sentencia)


estado 18

    8 sentencia: est_declaracion .

    $default  reduce usando la regla 8 (sentencia)


estado 19

   10 sentencia: seleccion .

    $default  reduce usando la regla 10 (sentencia)


estado 20

   11 sentencia: entrada_salida . PUNTO_Y_COMA

    PUNTO_Y_COMA  desplazar e ir al estado 31


estado 21

   49 est_declaracion: DIM $@10 . est_variables AS est_tipos

    OP_LESS  desplazar e ir al estado 32

    est_variables  ir al estado 33


estado 22

   18 asignacion: ID @3 . OP_ASIG $@4 expresion

    OP_ASIG  desplazar e ir al estado 34


estado 23

   12 est_asignacion: CONST ID . OP_ASIG_CONS CONST_REAL
   13               | CONST ID . OP_ASIG_CONS CONST_INT
   14               | CONST ID . OP_ASIG_CONS CONST_STR

    OP_ASIG_CONS  desplazar e ir al estado 35


estado 24

   68 entrada_salida: PUT $@15 . ID

    ID  desplazar e ir al estado 36


estado 25

   70 entrada_salida: PUT $@16 . CONST_STR

    CONST_STR  desplazar e ir al estado 37


estado 26

   66 entrada_salida: GET $@14 . ID

    ID  desplazar e ir al estado 38


estado 27

   20 ciclo: WHILE $@5 . PARENTESIS condicion END_PARENTESIS LLAVE bloque END_LLAVE

    PARENTESIS  desplazar e ir al estado 39


estado 28

   61 seleccion: IF PARENTESIS . condicion END_PARENTESIS LLAVE bloque END_LLAVE
   63          | IF PARENTESIS . condicion END_PARENTESIS LLAVE bloque END_LLAVE ELSE $@13 END_LLAVE bloque END_LLAVE
   64          | IF PARENTESIS . condicion END_PARENTESIS sentencia

    ID          desplazar e ir al estado 40
    CONST_REAL  desplazar e ir al estado 41
    CONST_INT   desplazar e ir al estado 42
    CONST_STR   desplazar e ir al estado 43
    PARENTESIS  desplazar e ir al estado 44
    CONTAR      desplazar e ir al estado 45

    condicion    ir al estado 46
    comparacion  ir al estado 47
    expresion    ir al estado 48
    termino      ir al estado 49
    factor       ir al estado 50


estado 29

    5 bloque: bloque sentencia .

    $default  reduce usando la regla 5 (bloque)


estado 30

    9 sentencia: est_asignacion PUNTO_Y_COMA .

    $default  reduce usando la regla 9 (sentencia)


estado 31

   11 sentencia: entrada_salida PUNTO_Y_COMA .

    $default  reduce usando la regla 11 (sentencia)


estado 32

   50 est_variables: OP_LESS . lista_variables OP_MORE

    ID  desplazar e ir al estado 51

    lista_variables  ir al estado 52


estado 33

   49 est_declaracion: DIM $@10 est_variables . AS est_tipos

    AS  desplazar e ir al estado 53


estado 34

   18 asignacion: ID @3 OP_ASIG . $@4 expresion

    $default  reduce usando la regla 17 ($@4)

    $@4  ir al estado 54


estado 35

   12 est_asignacion: CONST ID OP_ASIG_CONS . CONST_REAL
   13               | CONST ID OP_ASIG_CONS . CONST_INT
   14               | CONST ID OP_ASIG_CONS . CONST_STR

    CONST_REAL  desplazar e ir al estado 55
    CONST_INT   desplazar e ir al estado 56
    CONST_STR   desplazar e ir al estado 57


estado 36

   68 entrada_salida: PUT $@15 ID .

    $default  reduce usando la regla 68 (entrada_salida)


estado 37

   70 entrada_salida: PUT $@16 CONST_STR .

    $default  reduce usando la regla 70 (entrada_salida)


estado 38

   66 entrada_salida: GET $@14 ID .

    $default  reduce usando la regla 66 (entrada_salida)


estado 39

   20 ciclo: WHILE $@5 PARENTESIS . condicion END_PARENTESIS LLAVE bloque END_LLAVE

    ID          desplazar e ir al estado 40
    CONST_REAL  desplazar e ir al estado 41
    CONST_INT   desplazar e ir al estado 42
    CONST_STR   desplazar e ir al estado 43
    PARENTESIS  desplazar e ir al estado 44
    CONTAR      desplazar e ir al estado 45

    condicion    ir al estado 58
    comparacion  ir al estado 47
    expresion    ir al estado 48
    termino      ir al estado 49
    factor       ir al estado 50


estado 40

   36 factor: ID .

    $default  reduce usando la regla 36 (factor)


estado 41

   38 factor: CONST_REAL .

    $default  reduce usando la regla 38 (factor)


estado 42

   37 factor: CONST_INT .

    $default  reduce usando la regla 37 (factor)


estado 43

   39 factor: CONST_STR .

    $default  reduce usando la regla 39 (factor)


estado 44

   40 factor: PARENTESIS . expresion END_PARENTESIS

    ID          desplazar e ir al estado 40
    CONST_REAL  desplazar e ir al estado 41
    CONST_INT   desplazar e ir al estado 42
    CONST_STR   desplazar e ir al estado 43
    PARENTESIS  desplazar e ir al estado 44
    CONTAR      desplazar e ir al estado 45

    expresion  ir al estado 59
    termino    ir al estado 49
    factor     ir al estado 50


estado 45

   41 factor: CONTAR . PARENTESIS expresion PUNTO_Y_COMA CORCHETE expresion END_CORCHETE END_PARENTESIS

    PARENTESIS  desplazar e ir al estado 60


estado 46

   61 seleccion: IF PARENTESIS condicion . END_PARENTESIS LLAVE bloque END_LLAVE
   63          | IF PARENTESIS condicion . END_PARENTESIS LLAVE bloque END_LLAVE ELSE $@13 END_LLAVE bloque END_LLAVE
   64          | IF PARENTESIS condicion . END_PARENTESIS sentencia

    END_PARENTESIS  desplazar e ir al estado 61


estado 47

   21 condicion: comparacion .
   22          | comparacion . OP_AND comparacion

    OP_AND  desplazar e ir al estado 62

    $default  reduce usando la regla 21 (condicion)


estado 48

   23 comparacion: expresion . lista_comparadores expresion
   24            | expresion .
   26 expresion: expresion . OP_SUM $@6 termino
   28          | expresion . OP_RES $@7 termino

    OP_LESS  desplazar e ir al estado 63
    OP_MORE  desplazar e ir al estado 64
    OP_DIFF  desplazar e ir al estado 65
    OP_SUM   desplazar e ir al estado 66
    OP_RES   desplazar e ir al estado 67
    OP_EQQ   desplazar e ir al estado 68
    OP_MOQ   desplazar e ir al estado 69
    OP_LEQ   desplazar e ir al estado 70

    $default  reduce usando la regla 24 (comparacion)

    lista_comparadores  ir al estado 71


estado 49

   29 expresion: termino .
   31 termino: termino . OP_MUL $@8 factor
   33        | termino . OP_DIV $@9 factor
   35        | termino . COMA factor

    OP_MUL  desplazar e ir al estado 72
    OP_DIV  desplazar e ir al estado 73
    COMA    desplazar e ir al estado 74

    $default  reduce usando la regla 29 (expresion)


estado 50

   34 termino: factor .

    $default  reduce usando la regla 34 (termino)


estado 51

   51 lista_variables: ID .
   54                | ID . @11 COMA $@12 lista_variables

    COMA      reduce usando la regla 52 (@11)
    $default  reduce usando la regla 51 (lista_variables)

    @11  ir al estado 75


estado 52

   50 est_variables: OP_LESS lista_variables . OP_MORE

    OP_MORE  desplazar e ir al estado 76


estado 53

   49 est_declaracion: DIM $@10 est_variables AS . est_tipos

    OP_LESS  desplazar e ir al estado 77

    est_tipos  ir al estado 78


estado 54

   18 asignacion: ID @3 OP_ASIG $@4 . expresion

    ID          desplazar e ir al estado 40
    CONST_REAL  desplazar e ir al estado 41
    CONST_INT   desplazar e ir al estado 42
    CONST_STR   desplazar e ir al estado 43
    PARENTESIS  desplazar e ir al estado 44
    CONTAR      desplazar e ir al estado 45

    expresion  ir al estado 79
    termino    ir al estado 49
    factor     ir al estado 50


estado 55

   12 est_asignacion: CONST ID OP_ASIG_CONS CONST_REAL .

    $default  reduce usando la regla 12 (est_asignacion)


estado 56

   13 est_asignacion: CONST ID OP_ASIG_CONS CONST_INT .

    $default  reduce usando la regla 13 (est_asignacion)


estado 57

   14 est_asignacion: CONST ID OP_ASIG_CONS CONST_STR .

    $default  reduce usando la regla 14 (est_asignacion)


estado 58

   20 ciclo: WHILE $@5 PARENTESIS condicion . END_PARENTESIS LLAVE bloque END_LLAVE

    END_PARENTESIS  desplazar e ir al estado 80


estado 59

   26 expresion: expresion . OP_SUM $@6 termino
   28          | expresion . OP_RES $@7 termino
   40 factor: PARENTESIS expresion . END_PARENTESIS

    OP_SUM          desplazar e ir al estado 66
    OP_RES          desplazar e ir al estado 67
    END_PARENTESIS  desplazar e ir al estado 81


estado 60

   41 factor: CONTAR PARENTESIS . expresion PUNTO_Y_COMA CORCHETE expresion END_CORCHETE END_PARENTESIS

    ID          desplazar e ir al estado 40
    CONST_REAL  desplazar e ir al estado 41
    CONST_INT   desplazar e ir al estado 42
    CONST_STR   desplazar e ir al estado 43
    PARENTESIS  desplazar e ir al estado 44
    CONTAR      desplazar e ir al estado 45

    expresion  ir al estado 82
    termino    ir al estado 49
    factor     ir al estado 50


estado 61

   61 seleccion: IF PARENTESIS condicion END_PARENTESIS . LLAVE bloque END_LLAVE
   63          | IF PARENTESIS condicion END_PARENTESIS . LLAVE bloque END_LLAVE ELSE $@13 END_LLAVE bloque END_LLAVE
   64          | IF PARENTESIS condicion END_PARENTESIS . sentencia

    DIM    desplazar e ir al estado 6
    ID     desplazar e ir al estado 7
    CONST  desplazar e ir al estado 8
    PUT    desplazar e ir al estado 9
    GET    desplazar e ir al estado 10
    WHILE  desplazar e ir al estado 11
    LLAVE  desplazar e ir al estado 83
    IF     desplazar e ir al estado 12

    sentencia        ir al estado 84
    est_asignacion   ir al estado 15
    asignacion       ir al estado 16
    ciclo            ir al estado 17
    est_declaracion  ir al estado 18
    seleccion        ir al estado 19
    entrada_salida   ir al estado 20


estado 62

   22 condicion: comparacion OP_AND . comparacion

    ID          desplazar e ir al estado 40
    CONST_REAL  desplazar e ir al estado 41
    CONST_INT   desplazar e ir al estado 42
    CONST_STR   desplazar e ir al estado 43
    PARENTESIS  desplazar e ir al estado 44
    CONTAR      desplazar e ir al estado 45

    comparacion  ir al estado 85
    expresion    ir al estado 48
    termino      ir al estado 49
    factor       ir al estado 50


estado 63

   46 lista_comparadores: OP_LESS .

    $default  reduce usando la regla 46 (lista_comparadores)


estado 64

   47 lista_comparadores: OP_MORE .

    $default  reduce usando la regla 47 (lista_comparadores)


estado 65

   45 lista_comparadores: OP_DIFF .

    $default  reduce usando la regla 45 (lista_comparadores)


estado 66

   26 expresion: expresion OP_SUM . $@6 termino

    $default  reduce usando la regla 25 ($@6)

    $@6  ir al estado 86


estado 67

   28 expresion: expresion OP_RES . $@7 termino

    $default  reduce usando la regla 27 ($@7)

    $@7  ir al estado 87


estado 68

   44 lista_comparadores: OP_EQQ .

    $default  reduce usando la regla 44 (lista_comparadores)


estado 69

   43 lista_comparadores: OP_MOQ .

    $default  reduce usando la regla 43 (lista_comparadores)


estado 70

   42 lista_comparadores: OP_LEQ .

    $default  reduce usando la regla 42 (lista_comparadores)


estado 71

   23 comparacion: expresion lista_comparadores . expresion

    ID          desplazar e ir al estado 40
    CONST_REAL  desplazar e ir al estado 41
    CONST_INT   desplazar e ir al estado 42
    CONST_STR   desplazar e ir al estado 43
    PARENTESIS  desplazar e ir al estado 44
    CONTAR      desplazar e ir al estado 45

    expresion  ir al estado 88
    termino    ir al estado 49
    factor     ir al estado 50


estado 72

   31 termino: termino OP_MUL . $@8 factor

    $default  reduce usando la regla 30 ($@8)

    $@8  ir al estado 89


estado 73

   33 termino: termino OP_DIV . $@9 factor

    $default  reduce usando la regla 32 ($@9)

    $@9  ir al estado 90


estado 74

   35 termino: termino COMA . factor

    ID          desplazar e ir al estado 40
    CONST_REAL  desplazar e ir al estado 41
    CONST_INT   desplazar e ir al estado 42
    CONST_STR   desplazar e ir al estado 43
    PARENTESIS  desplazar e ir al estado 44
    CONTAR      desplazar e ir al estado 45

    factor  ir al estado 91


estado 75

   54 lista_variables: ID @11 . COMA $@12 lista_variables

    COMA  desplazar e ir al estado 92


estado 76

   50 est_variables: OP_LESS lista_variables OP_MORE .

    $default  reduce usando la regla 50 (est_variables)


estado 77

   60 est_tipos: OP_LESS . lista_tipos OP_MORE

    FLOAT      desplazar e ir al estado 93
    INTEGER    desplazar e ir al estado 94
    CONST_STR  desplazar e ir al estado 95

    lista_tipos  ir al estado 96
    tipo         ir al estado 97


estado 78

   49 est_declaracion: DIM $@10 est_variables AS est_tipos .

    $default  reduce usando la regla 49 (est_declaracion)


estado 79

   18 asignacion: ID @3 OP_ASIG $@4 expresion .
   26 expresion: expresion . OP_SUM $@6 termino
   28          | expresion . OP_RES $@7 termino

    OP_SUM  desplazar e ir al estado 66
    OP_RES  desplazar e ir al estado 67

    $default  reduce usando la regla 18 (asignacion)


estado 80

   20 ciclo: WHILE $@5 PARENTESIS condicion END_PARENTESIS . LLAVE bloque END_LLAVE

    LLAVE  desplazar e ir al estado 98


estado 81

   40 factor: PARENTESIS expresion END_PARENTESIS .

    $default  reduce usando la regla 40 (factor)


estado 82

   26 expresion: expresion . OP_SUM $@6 termino
   28          | expresion . OP_RES $@7 termino
   41 factor: CONTAR PARENTESIS expresion . PUNTO_Y_COMA CORCHETE expresion END_CORCHETE END_PARENTESIS

    OP_SUM        desplazar e ir al estado 66
    OP_RES        desplazar e ir al estado 67
    PUNTO_Y_COMA  desplazar e ir al estado 99


estado 83

   61 seleccion: IF PARENTESIS condicion END_PARENTESIS LLAVE . bloque END_LLAVE
   63          | IF PARENTESIS condicion END_PARENTESIS LLAVE . bloque END_LLAVE ELSE $@13 END_LLAVE bloque END_LLAVE

    DIM    desplazar e ir al estado 6
    ID     desplazar e ir al estado 7
    CONST  desplazar e ir al estado 8
    PUT    desplazar e ir al estado 9
    GET    desplazar e ir al estado 10
    WHILE  desplazar e ir al estado 11
    IF     desplazar e ir al estado 12

    bloque           ir al estado 100
    sentencia        ir al estado 14
    est_asignacion   ir al estado 15
    asignacion       ir al estado 16
    ciclo            ir al estado 17
    est_declaracion  ir al estado 18
    seleccion        ir al estado 19
    entrada_salida   ir al estado 20


estado 84

   64 seleccion: IF PARENTESIS condicion END_PARENTESIS sentencia .

    $default  reduce usando la regla 64 (seleccion)


estado 85

   22 condicion: comparacion OP_AND comparacion .

    $default  reduce usando la regla 22 (condicion)


estado 86

   26 expresion: expresion OP_SUM $@6 . termino

    ID          desplazar e ir al estado 40
    CONST_REAL  desplazar e ir al estado 41
    CONST_INT   desplazar e ir al estado 42
    CONST_STR   desplazar e ir al estado 43
    PARENTESIS  desplazar e ir al estado 44
    CONTAR      desplazar e ir al estado 45

    termino  ir al estado 101
    factor   ir al estado 50


estado 87

   28 expresion: expresion OP_RES $@7 . termino

    ID          desplazar e ir al estado 40
    CONST_REAL  desplazar e ir al estado 41
    CONST_INT   desplazar e ir al estado 42
    CONST_STR   desplazar e ir al estado 43
    PARENTESIS  desplazar e ir al estado 44
    CONTAR      desplazar e ir al estado 45

    termino  ir al estado 102
    factor   ir al estado 50


estado 88

   23 comparacion: expresion lista_comparadores expresion .
   26 expresion: expresion . OP_SUM $@6 termino
   28          | expresion . OP_RES $@7 termino

    OP_SUM  desplazar e ir al estado 66
    OP_RES  desplazar e ir al estado 67

    $default  reduce usando la regla 23 (comparacion)


estado 89

   31 termino: termino OP_MUL $@8 . factor

    ID          desplazar e ir al estado 40
    CONST_REAL  desplazar e ir al estado 41
    CONST_INT   desplazar e ir al estado 42
    CONST_STR   desplazar e ir al estado 43
    PARENTESIS  desplazar e ir al estado 44
    CONTAR      desplazar e ir al estado 45

    factor  ir al estado 103


estado 90

   33 termino: termino OP_DIV $@9 . factor

    ID          desplazar e ir al estado 40
    CONST_REAL  desplazar e ir al estado 41
    CONST_INT   desplazar e ir al estado 42
    CONST_STR   desplazar e ir al estado 43
    PARENTESIS  desplazar e ir al estado 44
    CONTAR      desplazar e ir al estado 45

    factor  ir al estado 104


estado 91

   35 termino: termino COMA factor .

    $default  reduce usando la regla 35 (termino)


estado 92

   54 lista_variables: ID @11 COMA . $@12 lista_variables

    $default  reduce usando la regla 53 ($@12)

    $@12  ir al estado 105


estado 93

   58 tipo: FLOAT .

    $default  reduce usando la regla 58 (tipo)


estado 94

   57 tipo: INTEGER .

    $default  reduce usando la regla 57 (tipo)


estado 95

   59 tipo: CONST_STR .

    $default  reduce usando la regla 59 (tipo)


estado 96

   60 est_tipos: OP_LESS lista_tipos . OP_MORE

    OP_MORE  desplazar e ir al estado 106


estado 97

   55 lista_tipos: tipo .
   56            | tipo . COMA lista_tipos

    COMA  desplazar e ir al estado 107

    $default  reduce usando la regla 55 (lista_tipos)


estado 98

   20 ciclo: WHILE $@5 PARENTESIS condicion END_PARENTESIS LLAVE . bloque END_LLAVE

    DIM    desplazar e ir al estado 6
    ID     desplazar e ir al estado 7
    CONST  desplazar e ir al estado 8
    PUT    desplazar e ir al estado 9
    GET    desplazar e ir al estado 10
    WHILE  desplazar e ir al estado 11
    IF     desplazar e ir al estado 12

    bloque           ir al estado 108
    sentencia        ir al estado 14
    est_asignacion   ir al estado 15
    asignacion       ir al estado 16
    ciclo            ir al estado 17
    est_declaracion  ir al estado 18
    seleccion        ir al estado 19
    entrada_salida   ir al estado 20


estado 99

   41 factor: CONTAR PARENTESIS expresion PUNTO_Y_COMA . CORCHETE expresion END_CORCHETE END_PARENTESIS

    CORCHETE  desplazar e ir al estado 109


estado 100

    5 bloque: bloque . sentencia
   61 seleccion: IF PARENTESIS condicion END_PARENTESIS LLAVE bloque . END_LLAVE
   63          | IF PARENTESIS condicion END_PARENTESIS LLAVE bloque . END_LLAVE ELSE $@13 END_LLAVE bloque END_LLAVE

    DIM        desplazar e ir al estado 6
    ID         desplazar e ir al estado 7
    CONST      desplazar e ir al estado 8
    PUT        desplazar e ir al estado 9
    GET        desplazar e ir al estado 10
    WHILE      desplazar e ir al estado 11
    END_LLAVE  desplazar e ir al estado 110
    IF         desplazar e ir al estado 12

    sentencia        ir al estado 29
    est_asignacion   ir al estado 15
    asignacion       ir al estado 16
    ciclo            ir al estado 17
    est_declaracion  ir al estado 18
    seleccion        ir al estado 19
    entrada_salida   ir al estado 20


estado 101

   26 expresion: expresion OP_SUM $@6 termino .
   31 termino: termino . OP_MUL $@8 factor
   33        | termino . OP_DIV $@9 factor
   35        | termino . COMA factor

    OP_MUL  desplazar e ir al estado 72
    OP_DIV  desplazar e ir al estado 73
    COMA    desplazar e ir al estado 74

    $default  reduce usando la regla 26 (expresion)


estado 102

   28 expresion: expresion OP_RES $@7 termino .
   31 termino: termino . OP_MUL $@8 factor
   33        | termino . OP_DIV $@9 factor
   35        | termino . COMA factor

    OP_MUL  desplazar e ir al estado 72
    OP_DIV  desplazar e ir al estado 73
    COMA    desplazar e ir al estado 74

    $default  reduce usando la regla 28 (expresion)


estado 103

   31 termino: termino OP_MUL $@8 factor .

    $default  reduce usando la regla 31 (termino)


estado 104

   33 termino: termino OP_DIV $@9 factor .

    $default  reduce usando la regla 33 (termino)


estado 105

   54 lista_variables: ID @11 COMA $@12 . lista_variables

    ID  desplazar e ir al estado 51

    lista_variables  ir al estado 111


estado 106

   60 est_tipos: OP_LESS lista_tipos OP_MORE .

    $default  reduce usando la regla 60 (est_tipos)


estado 107

   56 lista_tipos: tipo COMA . lista_tipos

    FLOAT      desplazar e ir al estado 93
    INTEGER    desplazar e ir al estado 94
    CONST_STR  desplazar e ir al estado 95

    lista_tipos  ir al estado 112
    tipo         ir al estado 97


estado 108

    5 bloque: bloque . sentencia
   20 ciclo: WHILE $@5 PARENTESIS condicion END_PARENTESIS LLAVE bloque . END_LLAVE

    DIM        desplazar e ir al estado 6
    ID         desplazar e ir al estado 7
    CONST      desplazar e ir al estado 8
    PUT        desplazar e ir al estado 9
    GET        desplazar e ir al estado 10
    WHILE      desplazar e ir al estado 11
    END_LLAVE  desplazar e ir al estado 113
    IF         desplazar e ir al estado 12

    sentencia        ir al estado 29
    est_asignacion   ir al estado 15
    asignacion       ir al estado 16
    ciclo            ir al estado 17
    est_declaracion  ir al estado 18
    seleccion        ir al estado 19
    entrada_salida   ir al estado 20


estado 109

   41 factor: CONTAR PARENTESIS expresion PUNTO_Y_COMA CORCHETE . expresion END_CORCHETE END_PARENTESIS

    ID          desplazar e ir al estado 40
    CONST_REAL  desplazar e ir al estado 41
    CONST_INT   desplazar e ir al estado 42
    CONST_STR   desplazar e ir al estado 43
    PARENTESIS  desplazar e ir al estado 44
    CONTAR      desplazar e ir al estado 45

    expresion  ir al estado 114
    termino    ir al estado 49
    factor     ir al estado 50


estado 110

   61 seleccion: IF PARENTESIS condicion END_PARENTESIS LLAVE bloque END_LLAVE .
   63          | IF PARENTESIS condicion END_PARENTESIS LLAVE bloque END_LLAVE . ELSE $@13 END_LLAVE bloque END_LLAVE

    ELSE  desplazar e ir al estado 115

    $default  reduce usando la regla 61 (seleccion)


estado 111

   54 lista_variables: ID @11 COMA $@12 lista_variables .

    $default  reduce usando la regla 54 (lista_variables)


estado 112

   56 lista_tipos: tipo COMA lista_tipos .

    $default  reduce usando la regla 56 (lista_tipos)


estado 113

   20 ciclo: WHILE $@5 PARENTESIS condicion END_PARENTESIS LLAVE bloque END_LLAVE .

    $default  reduce usando la regla 20 (ciclo)


estado 114

   26 expresion: expresion . OP_SUM $@6 termino
   28          | expresion . OP_RES $@7 termino
   41 factor: CONTAR PARENTESIS expresion PUNTO_Y_COMA CORCHETE expresion . END_CORCHETE END_PARENTESIS

    OP_SUM        desplazar e ir al estado 66
    OP_RES        desplazar e ir al estado 67
    END_CORCHETE  desplazar e ir al estado 116


estado 115

   63 seleccion: IF PARENTESIS condicion END_PARENTESIS LLAVE bloque END_LLAVE ELSE . $@13 END_LLAVE bloque END_LLAVE

    $default  reduce usando la regla 62 ($@13)

    $@13  ir al estado 117


estado 116

   41 factor: CONTAR PARENTESIS expresion PUNTO_Y_COMA CORCHETE expresion END_CORCHETE . END_PARENTESIS

    END_PARENTESIS  desplazar e ir al estado 118


estado 117

   63 seleccion: IF PARENTESIS condicion END_PARENTESIS LLAVE bloque END_LLAVE ELSE $@13 . END_LLAVE bloque END_LLAVE

    END_LLAVE  desplazar e ir al estado 119


estado 118

   41 factor: CONTAR PARENTESIS expresion PUNTO_Y_COMA CORCHETE expresion END_CORCHETE END_PARENTESIS .

    $default  reduce usando la regla 41 (factor)


estado 119

   63 seleccion: IF PARENTESIS condicion END_PARENTESIS LLAVE bloque END_LLAVE ELSE $@13 END_LLAVE . bloque END_LLAVE

    DIM    desplazar e ir al estado 6
    ID     desplazar e ir al estado 7
    CONST  desplazar e ir al estado 8
    PUT    desplazar e ir al estado 9
    GET    desplazar e ir al estado 10
    WHILE  desplazar e ir al estado 11
    IF     desplazar e ir al estado 12

    bloque           ir al estado 120
    sentencia        ir al estado 14
    est_asignacion   ir al estado 15
    asignacion       ir al estado 16
    ciclo            ir al estado 17
    est_declaracion  ir al estado 18
    seleccion        ir al estado 19
    entrada_salida   ir al estado 20


estado 120

    5 bloque: bloque . sentencia
   63 seleccion: IF PARENTESIS condicion END_PARENTESIS LLAVE bloque END_LLAVE ELSE $@13 END_LLAVE bloque . END_LLAVE

    DIM        desplazar e ir al estado 6
    ID         desplazar e ir al estado 7
    CONST      desplazar e ir al estado 8
    PUT        desplazar e ir al estado 9
    GET        desplazar e ir al estado 10
    WHILE      desplazar e ir al estado 11
    END_LLAVE  desplazar e ir al estado 121
    IF         desplazar e ir al estado 12

    sentencia        ir al estado 29
    est_asignacion   ir al estado 15
    asignacion       ir al estado 16
    ciclo            ir al estado 17
    est_declaracion  ir al estado 18
    seleccion        ir al estado 19
    entrada_salida   ir al estado 20


estado 121

   63 seleccion: IF PARENTESIS condicion END_PARENTESIS LLAVE bloque END_LLAVE ELSE $@13 END_LLAVE bloque END_LLAVE .

    $default  reduce usando la regla 63 (seleccion)
