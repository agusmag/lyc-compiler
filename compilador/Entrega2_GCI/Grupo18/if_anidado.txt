   /*Se saco el IF anidado por que no nos tomaba bien las reglas, fijarse si se puede volver a poner adentro*/
   
   
   | IF PARENTESIS condicion END_PARENTESIS LLAVE {/*
        insertarEnLista("CMP");
        insertarEnLista(valorComparacion(comparador_usado));
        char sPosActual[5];
        insertarEnLista("###");
        sprintf(sPosActual, "%d", puntero_tokens-1);
        apilar(PILA_IF,sPosActual);
    
        sprintf(posTrue, "%d", puntero_tokens); //Guardo la posicion del true
   */} bloque {
        char sPosActual[5];
        insertarEnLista("BI"); //Salto incondicional al final del if(todavia no lo se aca)
        insertarEnLista("###"); //Este es el que despues se va a reemplazar por la posicion final
        sprintf(sPosActual, "%d", puntero_tokens-1);
        apilar(PILA_IF,sPosActual);
    } END_LLAVE ELSE {
        sprintf(posFalse, "%d", puntero_tokens); /*guardo la posicion*/
        printf("ELSE\n");
    } LLAVE bloque END_LLAVE {
        int x, i, iPosActual;
        char sPosActual[5], sPosActualTrue[5], sPosActualFalse[5], sPosCondDos[5];
        
        x=desapilar(PILA_IF); //Primero que desapilo -> apunta a la posicion actual
        sprintf(sPosActual, "%d", puntero_tokens);
        escribirEnLista(x,sPosActual);
        
        x=desapilar(PILA_IF); //Segundo que desapilo -> apunta a la parte verdadera
        sprintf(sPosActualTrue, "%s", posTrue);
        escribirEnLista(x,sPosActualTrue);
        
        x=desapilar(PILA_IF); //Tercero que desapilo -> apunta al final
        sprintf(sPosActual, "%d", puntero_tokens);
        escribirEnLista(x,sPosActual);
        
        sprintf(sPosActual, "-1");
        sprintf(posCondDos, "-1");
        sprintf(posFalse, "-1");
        sprintf(posTrue, "-1");

        printf("FIN ELSE.\n");
    }